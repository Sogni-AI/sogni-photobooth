@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  @apply bg-gray-900 text-white;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Extra styling for countdown, flash effect */
.countdown-overlay {
  @apply absolute inset-0 flex items-center justify-center text-7xl font-bold bg-black bg-opacity-50;
  z-index: 50;
}

.flash-overlay {
  @apply absolute inset-0 bg-white;
  z-index: 60;
  animation: flashAnimation 0.4s ease-in-out forwards;
}

@keyframes flashAnimation {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Control panel at top-left */
.control-panel {
  @apply absolute top-4 left-4 bg-gray-800 bg-opacity-70 p-4 rounded-lg shadow-xl flex flex-col gap-3;
  z-index: 80;
}

.control-panel-row {
  @apply flex items-center gap-2;
}

/* Thumbnail gallery pinned at bottom across full width */
.thumbnail-gallery {
  @apply flex gap-3 p-3 overflow-x-auto bg-black bg-opacity-70;
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 70;
}

/* Container for each thumbnail */
.thumbnail-container {
  @apply relative flex-shrink-0 w-[6rem] h-[6rem];
}

/* The actual thumbnail image */
.thumbnail {
  @apply cursor-pointer border-2 border-transparent hover:border-blue-500 w-full h-full object-cover object-center;
}

/* If this thumbnail is currently selected, add a blue outline */
.thumbnail.selected {
  @apply border-blue-500;
}

/* Fade-in effect for newly arrived thumbnails */
.thumbnail-fade {
  animation: fadeInThumb 0.8s ease-in;
}
@keyframes fadeInThumb {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* "X" delete button in top-left corner of the thumbnail */
.thumbnail-delete-button {
  @apply absolute top-0 left-0 text-white bg-gray-900 bg-opacity-70 p-1 rounded-br cursor-pointer hover:bg-opacity-90;
  font-weight: bold;
}

/* If multiple images in that set, show the count in bottom-right corner */
.stack-count {
  @apply absolute bottom-0 right-0 bg-black bg-opacity-70 text-xs text-white px-1 py-0.5 rounded-tl;
}

/* Selected photo container styled as a full-screen overlay */
.selected-photo-container {
  @apply fixed inset-0 flex items-center justify-center;
  z-index: 90;
  background: rgba(0, 0, 0, 0.85);
}

/* 
   Instead of forcing height: 100%, we use Tailwind's max-h-full, max-w-full,
   and object-contain to preserve the original aspect ratio.
*/
.selected-photo-container img {
  @apply max-h-full max-w-full object-contain;
}

/* Photo stack index indicator top-right corner (e.g. "1/4") */
.stack-index-indicator {
  @apply absolute top-4 right-4 text-xl bg-black bg-opacity-70 py-1 px-2 rounded;
}

/* Force the video element to fill or preserve aspect ratio. Choose one:

   Option A (Fill screen but can get cropped or distort if container aspect ratio mismatches):
   #webcam { @apply w-full h-full object-cover; }

   Option B (Preserve aspect ratio with black bars):
   #webcam { @apply w-full h-auto object-contain; }

   Below is Option A if you want it to fill the container:
*/
#webcam {
  @apply w-full h-full object-cover;
}
