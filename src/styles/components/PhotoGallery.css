@keyframes pulse-attention {
  0% {
    transform: translateX(-50%) scale(1);
    box-shadow: 0 4px 16px rgba(0,0,0,0.25);
  }
  50% {
    transform: translateX(-50%) scale(1.05);
    box-shadow: 0 6px 20px rgba(255,152,0,0.4);
  }
  100% {
    transform: translateX(-50%) scale(1);
    box-shadow: 0 4px 16px rgba(0,0,0,0.25);
  }
}

/* Subtle loading animation - affects the entire polaroid frame */
@keyframes subtle-frame-pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.0107); /* 1.5x smaller than 1.016 (1.016/1.5 â‰ˆ 1.0107) */
  }
  100% {
    transform: scale(1);
  }
}

/* One-time development to high exposure */
@keyframes polaroid-develop {
  0% {
    opacity: 0.15;
    filter: brightness(2.5) contrast(0.3) saturate(0.4) sepia(0.2) hue-rotate(-10deg) blur(8px);
    background-color: rgba(240, 240, 242, 0.6);
    animation-timing-function: ease-in;
  }
  20% {
    opacity: 0.18;
    filter: brightness(2.2) contrast(0.38) saturate(0.5) sepia(0.16) hue-rotate(-8deg) blur(4px);
    background-color: rgba(240, 240, 242, 0.5);
    animation-timing-function: ease-in;
  }
  50% {
    opacity: 0.32;
    filter: brightness(1.6) contrast(0.7) saturate(0.8) sepia(0.1) hue-rotate(-4deg) blur(1.5px);
    background-color: rgba(240, 240, 242, 0.2);
    animation-timing-function: ease-out;
  }
  100% {
    opacity: 0.4;
    filter: brightness(1.35) contrast(0.85) saturate(0.9) sepia(0.06) hue-rotate(-2deg) blur(0.5px);
    background-color: rgba(240, 240, 242, 0.12);
    animation-timing-function: ease-out;
  }
}

/* Continuous pulse from max exposure down to 7% below max and back */
@keyframes polaroid-pulse {
  0% {
    opacity: 0.4;
    filter: brightness(1.35) contrast(0.85) saturate(0.9) sepia(0.06) hue-rotate(-2deg) blur(1.5px);
    background-color: rgba(240, 240, 242, 0.12);
  }
  50% {
    opacity: 0.33;
    filter: brightness(1.45) contrast(0.8) saturate(0.85) sepia(0.08) hue-rotate(-3deg) blur(2px);
    background-color: rgba(240, 240, 242, 0.18);
  }
  100% {
    opacity: 0.4;
    filter: brightness(1.35) contrast(0.85) saturate(0.9) sepia(0.06) hue-rotate(-2deg) blur(1.5px);
    background-color: rgba(240, 240, 242, 0.12);
  }
}

/* Alternative exposure animation for newly-arrived frames */
@keyframes polaroid-exposure {
  0% {
    opacity: 0.15;
    filter: brightness(2.5) contrast(0.3) saturate(0.4) sepia(0.2) hue-rotate(-10deg) blur(8px);
    background-color: rgba(240, 240, 242, 0.6);
    animation-timing-function: ease-in;
  }
  30% {
    opacity: 0.2;
    filter: brightness(2.1) contrast(0.4) saturate(0.55) sepia(0.15) hue-rotate(-7deg) blur(5px);
    background-color: rgba(240, 240, 242, 0.45);
    animation-timing-function: ease-in;
  }
  70% {
    opacity: 0.35;
    filter: brightness(1.5) contrast(0.75) saturate(0.85) sepia(0.08) hue-rotate(-3deg) blur(2px);
    background-color: rgba(240, 240, 242, 0.15);
    animation-timing-function: ease-out;
  }
  100% {
    opacity: 0.4;
    filter: brightness(1.35) contrast(0.85) saturate(0.9) sepia(0.06) hue-rotate(-2deg) blur(1.5px);
    background-color: rgba(240, 240, 242, 0.12);
    animation-timing-function: ease-out;
  }
}

@keyframes gentle-glow {
  0% {
    box-shadow: inset 0 0 20px rgba(72, 227, 242, 0.1);
  }
  50% {
    box-shadow: inset 0 0 30px rgba(72, 227, 242, 0.2);
  }
  100% {
    box-shadow: inset 0 0 20px rgba(72, 227, 242, 0.1);
  }
}

/* Apply subtle loading effects to the entire polaroid frame - but NOT in popup/selected view or newly arrived */
.film-frame.loading:not(.selected):not(.newly-arrived) {
  animation: subtle-frame-pulse 6s ease-in-out infinite !important; /* Total cycle time to sync all animations */
  /* Use CSS custom property for staggered delays */
  animation-delay: var(--stagger-delay, 0s) !important;
  /* Override any conflicting transitions during loading */
  transition: none !important;
}

/* Add subtle inner bevel to all frames that's visible above all images - but NOT in selected/slideshow mode */
.film-frame:not(.selected)::after {
  content: "";
  position: absolute;
  top: 16px;
  left: 16px;
  right: 16px;
  bottom: 56px;
  pointer-events: none;
  z-index: 10; /* Above all images including final loaded image */
  box-shadow: inset 0 0 6px 2px rgba(0, 0, 0, 0.08), inset 0 0 4px 1px rgba(180, 180, 180, 0.15);
  /* Ensure this element is not affected by any filters */
  filter: none !important;
  backdrop-filter: none !important;
  will-change: auto;
}

/* Create a clipping container for the placeholder to prevent blur bleed */
.film-frame.loading {
  overflow: hidden;
}

.film-frame.loading > div {
  overflow: hidden;
  position: relative;
}

/* Apply polaroid exposure effect only to loading placeholder image */
.film-frame.loading .placeholder {
  will-change: opacity, filter, background-color;
  animation:
    polaroid-develop 15s cubic-bezier(0.05, 0.7, 0.4, 1) forwards,
    polaroid-pulse 7.5s ease-in-out 15s infinite;
  mix-blend-mode: normal;
  /* Ensure placeholder is below the crisp shadow overlay */
  z-index: 5;
  position: relative;
  /* Prevent blur from bleeding into the white border */
  transform: translateZ(0); /* Force GPU layer to contain blur */
}

/* Debug: Add explicit stagger rules in case CSS custom properties aren't working - but NOT in popup/selected view or newly arrived */
/* Frame animation delays - keep frame animation at 6s for subtle effect */
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(1) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 0s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(2) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 0.5s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(3) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 1s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(4) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 1.5s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(5) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 2s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(6) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 2.5s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(7) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 3s !important; }
.film-frame.loading:not(.selected):not(.newly-arrived):nth-of-type(8) { animation: subtle-frame-pulse 6s ease-in-out infinite !important; animation-delay: 3.5s !important; }

/* Start exposure immediately for all placeholders (no staggering) */

/* Ensure newly-arrived loading frames don't clamp placeholder opacity */
.film-frame.loading.newly-arrived .placeholder {
  animation: polaroid-exposure 8.75s ease-out forwards !important;
}

/* Ensure loaded frames transition smoothly from loading state - remove transitions that cause pulse - EXCEPT newly arrived */
.film-frame.loaded:not(.newly-arrived) {
  animation: none !important;
  filter: none !important;
  /* Ensure frame stays visible during transition */
  opacity: 1 !important;
  visibility: visible !important;
  /* Remove all transitions that might cause post-load pulse */
  transition: none !important;
}

/* Allow transitions for loaded newly-arrived frames */
.film-frame.loaded.newly-arrived img:not(.placeholder) {
  transition: opacity 1.3s ease-out !important;
}

/* Ensure placeholder fades out smoothly when final image loads */
.film-frame.loaded .placeholder {
  animation: none !important;
  opacity: 0 !important;
  transition: opacity 0.2s ease-out !important;
}

/* Let the existing JavaScript fade-in logic work without interference */
/* The existing onLoad handler in PhotoGallery.jsx handles fade-in */

/* Prevent any frame disappearing during state transitions */
.film-frame {
  opacity: 1;
  visibility: visible;
}

/* Ensure selected frames never animate with loading animations */
.film-frame.selected {
  animation: none !important;
  transition: none !important;
}

/* Remove holographic effects from placeholder image since we're applying to the frame */
/* All animations handled by the parent frame */

.mobile-download-button {
  position: fixed;
  left: 50%;
  bottom: 80px;
  transform: translateX(-50%);
  background: linear-gradient(135deg, #FF9800 0%, #F57C00 100%);
  color: white;
  border: none;
  padding: 14px 28px;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0,0,0,0.25);
  cursor: pointer;
  font-weight: bold;
  font-size: 16px;
  z-index: 999999;
  display: flex;
  align-items: center;
  gap: 10px;
  animation: pulse-attention 1.5s infinite;
}

.mobile-download-button:active {
  transform: translateX(-50%) scale(0.95);
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
}

/* Responsive styles for smaller screens */
@media (max-width: 480px) {
  .mobile-download-button {
    bottom: 100px;
    padding: 12px 20px;
    font-size: 14px;
  }
}

/* Styles for action buttons */
.photo-action-buttons {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  gap: 12px;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  /* Ensure action bar sits above sloth mascot animation */
  z-index: 999999 !important;
  width: 100%;
  max-width: none;
  padding: 0 20px;
  box-sizing: border-box;
}

/* Landscape layout: align action bar horizontally to bottom right */
@media (orientation: landscape) and (min-width: 1024px) {
  .photo-action-buttons {
    flex-direction: row !important;
    justify-content: flex-end !important;
    align-items: center !important;
    right: 20px !important;
    left: auto !important;
    bottom: 20px !important;
    top: auto !important;
    transform: none !important;
    width: auto !important;
    max-width: none !important;
    padding: 0 !important;
    gap: 12px !important;
    background: transparent !important;
    backdrop-filter: none !important;
    border-radius: 0 !important;
  }
  
  .photo-action-buttons .action-button {
    width: auto !important;
    justify-content: center !important;
    min-width: 100px !important;
  }
}

/* Ensure the Enhance dropdown always layers above sloth mascot */
.enhance-button-container .enhance-dropdown {
  z-index: 9999999 !important;
}

/* Force action buttons above sloth with maximum specificity */
body .photo-action-buttons,
html body .photo-action-buttons,
.photobooth-app .photo-action-buttons {
  z-index: 999999 !important;
}

/* Force individual action buttons above sloth */
body .photo-action-buttons .action-button,
html body .photo-action-buttons .action-button,
.photobooth-app .photo-action-buttons .action-button {
  z-index: 999999 !important;
}

.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  min-width: 100px;
  flex: 0 1 auto;
  padding: 10px 16px;
  border-radius: 0; /* Square corners */
  font-weight: bold;
  transition: all 0.2s ease;
  border: none;
  font-size: 14px;
  cursor: pointer;
  color: white;
  white-space: nowrap;
}

.action-button:hover {
  transform: translateY(-2px);
}

.action-button:active {
  transform: translateY(1px);
}

.action-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Loading animation for enhance button */
.enhance-btn.loading {
  position: relative;
  pointer-events: none;
}

.enhance-btn.loading::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin-top: -8px;
  margin-left: -8px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: enhance-spin 1s linear infinite;
}

.enhance-btn.loading span {
  opacity: 0.3;
}

@keyframes enhance-spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Enhancement progress indicator - removed, now shown in button text */

/* Enhancement error message */
.enhancement-error {
  animation: fadeInError 0.3s ease-out;
  box-shadow: 0 2px 8px rgba(255, 0, 0, 0.3);
}

@keyframes fadeInError {
  0% { 
    opacity: 0; 
    transform: translateY(-10px); 
  }
  100% { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

/* Redo button styling - use same style as other action buttons */
/* Uses default action button styling */

/* Fix layout for when redo and enhance buttons are both shown */
.enhance-button-container > div[style*="display: flex"] {
  align-items: center;
  justify-content: center;
  flex-wrap: nowrap;
}

/* Ensure both buttons in the redo/enhance pair have consistent sizing */
.enhance-button-container {
  position: relative;
  display: flex;
  align-items: center;
}

.enhance-buttons-group {
  display: flex;
  gap: 8px;
  align-items: center;
}

.enhance-button-container .action-button {
  min-width: 100px;
  flex: 0 0 auto;
}

/* Enhancement button container */
.enhance-button-container {
  min-height: 40px; /* Ensure space for error messages */
}

/* Special styling for mobile layout */
@media (max-width: 768px) {
  .photo-action-buttons {
    bottom: 0px !important;
    gap: 0;
    padding: 0 8px;
    flex-wrap: nowrap;
    overflow-x: auto;
    justify-content: space-evenly !important;
    z-index: 999999 !important;
  }
  
  .action-button {
    font-size: 11px;
    padding: 8px 4px;
    min-width: 70px;
    flex: 1;
    flex-shrink: 0;
    max-width: calc(25% - 4px);
  }
  
  /* Larger Twitter icon on mobile */
  .action-button svg {
    width: 14px !important;
    height: 14px !important;
    margin-right: 3px !important;
  }
  
  .enhance-buttons-group {
    gap: 0;
    display: flex;
    flex: 1;
    flex-shrink: 0;
    max-width: calc(25% - 4px);
  }
  
  .enhance-buttons-group .action-button {
    min-width: 65px;
    flex: 1;
    max-width: none;
  }
}

/* Extra specific styling for mobile portrait */
@media (max-width: 768px) and (orientation: portrait) {
  .photo-action-buttons {
    justify-content: space-evenly !important;
    width: 100% !important;
    padding: 0 4px !important;
    z-index: 999999 !important;
  }
  
  .action-button {
    flex: 1 1 0 !important;
    min-width: 0 !important;
    max-width: none !important;
    margin: 0 2px !important;
  }
  
  .enhance-buttons-group {
    flex: 1 1 0 !important;
    max-width: none !important;
    margin: 0 2px !important;
  }
}