# Redirect HTTP â†’ HTTPS
server {
    listen 80;
    server_name photobooth-local.sogni.ai;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name photobooth-local.sogni.ai;
    underscores_in_headers on;

    # Increase max request body size to 50MB
    client_max_body_size 50M;

    ######## SSL ########
    ssl_certificate     /opt/homebrew/etc/nginx/ssl/sogni-local.crt;
    ssl_certificate_key /opt/homebrew/etc/nginx/ssl/sogni-local.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    ######## Frontend (Vite) ########
    location / {
        proxy_pass http://127.0.0.1:5175;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade          $http_upgrade;
        proxy_set_header Connection       "upgrade";
        proxy_set_header Host             $host;
        proxy_cache_bypass               $http_upgrade;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_read_timeout    60s;
        proxy_send_timeout    60s;
    }

    ######## SSE Progress Endpoint (Special Handling) ########
    location ~* ^/api/sogni/progress/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        
        # Specific SSE connection headers - IMPORTANT!
        proxy_set_header Connection       "keep-alive";
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Critical for SSE - match production settings
        proxy_buffering                  off;
        proxy_cache                      off;
        proxy_read_timeout               86400s; # 24 hours like prod
        chunked_transfer_encoding        on; 
        
        # Empty Connection header after initial keep-alive (like in prod)
        proxy_set_header Connection      '';
        
        # Set Access-Control-Allow-Origin headers like production
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    ######## Backend API (Regular Endpoints) ########
    location /api {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade          $http_upgrade;
        proxy_set_header Connection       "upgrade";
        proxy_set_header Host             $host;
        proxy_cache_bypass               $http_upgrade;
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Match production longer timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout    300s;
        proxy_read_timeout    300s;
        
        # Critical for SSE - disable nginx buffers in general API routes too
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        
        # Optional debug headers
        add_header X-Debug-Path $request_uri always;
        add_header X-Debug-Host $host       always;
    }


    ######## Custom Error Page ########
    error_page 502 504 /error.html;
    location = /error.html {
        root   /opt/homebrew/etc/nginx/html;
        internal;
    }
} 